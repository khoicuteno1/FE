{"ast":null,"code":"var _jsxFileName = \"D:\\\\QuanLyDiemSinhVien\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Container, Grid, Paper, Typography, Button } from '@mui/material';\nimport PeopleIcon from '@mui/icons-material/People';\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\nimport GradeIcon from '@mui/icons-material/Grade';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport Sidebar from '../components/Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatCard = ({\n  icon,\n  value,\n  label\n}) => /*#__PURE__*/_jsxDEV(Paper, {\n  elevation: 2,\n  sx: {\n    p: 3,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    bgcolor: 'white',\n    borderRadius: 2\n  },\n  children: [/*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      color: '#1976d2',\n      mb: 1\n    },\n    children: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h4\",\n    component: \"div\",\n    gutterBottom: true,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"text.secondary\",\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n_c = StatCard;\nconst Dashboard = () => {\n  _s();\n  const [totalStudents, setTotalStudents] = useState(0);\n  const [subjectsCount, setSubjectsCount] = useState(0);\n  // Fetch the total number of students from the API\n  useEffect(() => {\n    const fetchStudents = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/sinhvien'); // Replace with your actual API URL\n        const data = await response.json();\n        setTotalStudents(data.length); // Assuming data is an array of students\n      } catch (error) {\n        console.error('Error fetching student data:', error);\n      }\n    };\n    const fetchMonHoc = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/MonHoc'); // Replace with your actual API URL\n        const data = await response.json();\n        setSubjectsCount(data.length); // Assuming data is an array of students\n      } catch (error) {\n        console.error('Error fetching student data:', error);\n      }\n    };\n    fetchMonHoc();\n    fetchStudents();\n  }, []); // Empty dependency array ensures it only runs once\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"main\",\n      sx: {\n        flexGrow: 1,\n        p: 3,\n        ml: '240px',\n        bgcolor: '#f5f5f5',\n        minHeight: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          sx: {\n            mb: 4\n          },\n          children: \"T\\u1ED5ng quan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(StatCard, {\n              icon: /*#__PURE__*/_jsxDEV(PeopleIcon, {\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this),\n              value: totalStudents // Dynamically display the number of students\n              ,\n              label: \"T\\u1ED5ng s\\u1ED1 sinh vi\\xEAn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(StatCard, {\n              icon: /*#__PURE__*/_jsxDEV(MenuBookIcon, {\n                sx: {\n                  fontSize: 40\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 23\n              }, this),\n              value: subjectsCount,\n              label: \"M\\xF4n h\\u1ECDc\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"BYdSDnBTMjddO3/cK8zw6mXGKgU=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"StatCard\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Container","Grid","Paper","Typography","Button","PeopleIcon","MenuBookIcon","GradeIcon","SettingsIcon","Sidebar","jsxDEV","_jsxDEV","StatCard","icon","value","label","elevation","sx","p","display","flexDirection","alignItems","bgcolor","borderRadius","children","color","mb","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","_c","Dashboard","_s","totalStudents","setTotalStudents","subjectsCount","setSubjectsCount","fetchStudents","response","fetch","data","json","length","error","console","fetchMonHoc","flexGrow","ml","minHeight","maxWidth","container","spacing","item","xs","sm","md","fontSize","_c2","$RefreshReg$"],"sources":["D:/QuanLyDiemSinhVien/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n} from '@mui/material';\r\nimport PeopleIcon from '@mui/icons-material/People';\r\nimport MenuBookIcon from '@mui/icons-material/MenuBook';\r\nimport GradeIcon from '@mui/icons-material/Grade';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\nconst StatCard = ({ icon, value, label }) => (\r\n  <Paper\r\n    elevation={2}\r\n    sx={{\r\n      p: 3,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      bgcolor: 'white',\r\n      borderRadius: 2,\r\n    }}\r\n  >\r\n    <Box sx={{ color: '#1976d2', mb: 1 }}>{icon}</Box>\r\n    <Typography variant=\"h4\" component=\"div\" gutterBottom>\r\n      {value}\r\n    </Typography>\r\n    <Typography color=\"text.secondary\">{label}</Typography>\r\n  </Paper>\r\n);\r\n\r\n\r\nconst Dashboard = () => {\r\n  const [totalStudents, setTotalStudents] = useState(0);\r\n  const [subjectsCount, setSubjectsCount] = useState(0);\r\n  // Fetch the total number of students from the API\r\n  useEffect(() => {\r\n    const fetchStudents = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/sinhvien'); // Replace with your actual API URL\r\n        const data = await response.json();\r\n        setTotalStudents(data.length); // Assuming data is an array of students\r\n      } catch (error) {\r\n        console.error('Error fetching student data:', error);\r\n      }\r\n    };\r\n    const fetchMonHoc = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/MonHoc'); // Replace with your actual API URL\r\n        const data = await response.json();\r\n        setSubjectsCount(data.length); // Assuming data is an array of students\r\n      } catch (error) {\r\n        console.error('Error fetching student data:', error);\r\n      }\r\n    };\r\n    fetchMonHoc();\r\n    fetchStudents();\r\n  }, []); // Empty dependency array ensures it only runs once\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <Sidebar />\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          flexGrow: 1,\r\n          p: 3,\r\n          ml: '240px',\r\n          bgcolor: '#f5f5f5',\r\n          minHeight: '100vh',\r\n        }}\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Typography variant=\"h4\" sx={{ mb: 4 }}>\r\n            Tổng quan\r\n          </Typography>\r\n          \r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <StatCard\r\n                icon={<PeopleIcon sx={{ fontSize: 40 }} />}\r\n                value={totalStudents} // Dynamically display the number of students\r\n                label=\"Tổng số sinh viên\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={6}>\r\n              <StatCard\r\n                icon={<MenuBookIcon sx={{ fontSize: 40 }} />}\r\n                value={subjectsCount}\r\n                label=\"Môn học\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}